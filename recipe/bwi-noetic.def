BootStrap: docker
From: ros:noetic

%labels

%help

%files

%post
    # Install mpi
    apt-get update && apt-get install -yq curl build-essential gnupg2 ca-certificates
    curl -k -L http://www.mellanox.com/downloads/ofed/RPM-GPG-KEY-Mellanox | apt-key add -
    curl -k -L https://linux.mellanox.com/public/repo/mlnx_ofed/latest/ubuntu18.04/mellanox_mlnx_ofed.list > /etc/apt/sources.list.d/mlnx_ofed.list
    apt-get update
    apt-get install -yq --no-install-recommends gfortran bison libibverbs-dev libnuma-dev libibmad-dev libibumad-dev librdmacm-dev libxml2-dev ca-certificates libfabric-dev mlnx-ofed-hpc ucx

    # Install PSM2
    curl -L https://github.com/intel/opa-psm2/archive/PSM2_11.2.78.tar.gz | tar -xzf -
    cd opa-psm2-PSM2_11.2.78
    make PSM_AVX=1 -j $(nproc --all 2>/dev/null || echo 2)
    make LIBDIR=/usr/lib/x86_64-linux-gnu install
    cd ../ && rm -rf ${PSMD}

    # Install impi-19.0.7
    curl -k -L https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB | apt-key add -
    echo deb https://apt.repos.intel.com/mpi all main > /etc/apt/sources.list.d/intel-mpi.list
    apt-get update && apt-get install -y intel-mpi-2019.7-102

    # Install mpi4py
    apt-get update && apt-get upgrade -y && apt-get install -y python3-pip
    pip3 install mpi4py

    # Install OpenCV-3.2.0
    export DEBIAN_FRONTEND=noninteractive
    ln -fs /usr/share/zoneinfo/$(curl http://ip-api.com/line?fields=timezone) /etc/localtime
    sudo apt-get install -y tzdata libtbb-dev libeigen3-dev unzip wget

    wget https://github.com/opencv/opencv/archive/3.2.0.zip -O opencv320.zip
    unzip opencv320.zip && rm opencv320.zip && cd opencv-3.2.0 
    touch OpenCV3.2withContrib

    wget https://github.com/opencv/opencv_contrib/archive/3.2.0.zip -O opencv_contrib320.zip
    unzip opencv_contrib320.zip && rm opencv_contrib320.zip && mv opencv_contrib-3.2.0 OpenCV_contrib

    ## Fix Flow control statements are not properly nested issue
    sed -i '21,22 s/^/#/' cmake/OpenCVCompilerOptions.cmake
    ## Fix ffmpeg version issue
    sed -i '1 i #define AV_CODEC_FLAG_GLOBAL_HEADER (1 << 22)\n#define CODEC_FLAG_GLOBAL_HEADER AV_CODEC_FLAG_GLOBAL_HEADER\n#define AVFMT_RAWPICTURE 0x0020' modules/videoio/src/cap_ffmpeg_impl.hpp
    ## Fix build.make:56 Error
    sed -i 's/PyString_AsString(obj);/(char*)PyString_AsString(obj);/' modules/python/src2/cv2.cpp
    ## Requires version 10 or lower
    if [[ `gcc -dumpversion` -ge 11 ]]; then
        sudo apt-get install -y gcc-10 g++-10 libtbb2-dev
        CC="gcc-10"
        CXX="g++-10"
    fi

    mkdir build
    cd build
    CC=${CC} CXX=${CXX} cmake -DOPENCV_EXTRA_MODULES_PATH=../OpenCV_contrib/modules -DWITH_QT=OFF -DWITH_OPENGL=ON -DFORCE_VTK=ON -DWITH_TBB=ON -DINSTALL_C_EXAMPLES=OFF -DWITH_GDAL=ON -DWITH_XINE=ON -DBUILD_EXAMPLES=OFF -DENABLE_PRECOMPILED_HEADERS=OFF ..
    CC=${CC} CXX=${CXX} make -j`nproc`
    make install && ldconfig

    # Install ROS dependencies
    apt-get -y install python3-catkin-tools python3-rosdep python3-rosinstall \
                       python3-rosinstall-generator python3-wstool python3-pip
    pip3 install rospkg catkin_pkg netifaces pillow
    rosdep update

    apt-get install -y ros-noetic-actionlib-tutorials ros-noetic-cv-bridge ros-noetic-map-server \
                       ros-noetic-gazebo-ros ros-noetic-gazebo-msgs ros-noetic-gazebo-ros-control ros-noetic-gazebo-plugins \
                       ros-noetic-pcl-ros ros-noetic-robot-state-publisher ros-noetic-joint-state-publisher \
                       ros-noetic-joint-trajectory-controller ros-noetic-dynamic-reconfigure ros-noetic-message-filters \
                       ros-noetic-map-msgs ros-noetic-xacro ros-noetic-laser-filters ros-noetic-nodelet ros-noetic-pluginlib \
                       ros-noetic-roslint ros-noetic-move-base ros-noetic-move-base-msgs ros-noetic-amcl ros-noetic-nav-msgs \
                       ros-noetic-depthimage-to-laserscan ros-noetic-pointcloud-to-laserscan ros-noetic-pr2-description \
                       ros-noetic-dwa-local-planner ros-noetic-global-planner ros-noetic-rviz ros-noetic-octomap

    # Download BWI repository
    mkdir -p /bwi_ws/src && cd /bwi_ws/src
    git clone -b jinsoo/light-hal-sim https://github.com/utexas-bwi/bwi.git
    git clone -b jinsoo/light-hal-sim https://github.com/utexas-bwi/bwi_common.git
    git clone -b jinsoo/light-hal-sim https://github.com/utexas-bwi/segbot.git
    git clone -b main https://github.com/utexas-bwi/segbot_bringup.git
    git clone -b master https://github.com/utexas-bwi/eband_local_planner.git
    # git clone -b master https://github.com/marinaKollmitz/gazebo_ros_2Dmap_plugin

    # Compile BWI repo
    cd /bwi_ws
    catkin config --init
    bash -c "source /opt/ros/melodic/setup.bash; catkin build -j6"  # Use -j2 if machine is slow

%runscript
    #!/bin/bash
    . /opt/intel/compilers_and_libraries_2020.4.304/linux/mpi/intel64/bin/mpivars.sh -ofi_internal=1 release_mt
    exec "${@}"

%environment
    # mpi+impi-19.0.7
    export I_MPI_LIBRARY_KIND=release_mt
    export I_MPI_OFI_LIBRARY_INTERNAL=1
    export I_MPI_REMOVED_VAR_WARNING=0
    export I_MPI_VAR_CHECK_SPELLING=0

    # ros
    export ROS_HOSTNAME=localhost
    export ROS_MASTER_URI=http://localhost:11311